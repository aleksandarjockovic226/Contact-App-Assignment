{"ast":null,"code":"import Contact from \"./contact\";\nexport default class ContactFunctions {\n  constructor() {\n    this.contacts = this.loadFromLocalStorage();\n  }\n\n  add(contact) {\n    this.contact.push(contact);\n    this.saveToLocalStorage();\n    return this.contacts;\n  }\n\n  delete(contact) {\n    this.contacts.splice(this.contacts.indexOf(contact), 1);\n    this.saveToLocalStorage();\n    return this.contacts;\n  }\n\n  savetoLocalStorage() {\n    var json = localStorage.getItem(\"contacts\");\n    if (json === null) return [];\n    let jsonParsed = JSON.parse(json, (key, value) => {\n      if (key === \"contacts\") {\n        value = new Contact(value);\n      }\n\n      return value;\n    });\n    if (jsonParsed.lenght === 0) return [];\n    let contacts = [];\n\n    for (let i = 0; i < jsonParsed.length; i++) {\n      contacts.push(Contact.fromJSON(jsonParsed[i]));\n    }\n\n    return Contact;\n  }\n\n}","map":{"version":3,"sources":["/Users/aleksandarjockovic/Desktop/untitled folder/react-app/src/components/events/contactFunctions.jsx"],"names":["Contact","ContactFunctions","constructor","contacts","loadFromLocalStorage","add","contact","push","saveToLocalStorage","delete","splice","indexOf","savetoLocalStorage","json","localStorage","getItem","jsonParsed","JSON","parse","key","value","lenght","i","length","fromJSON"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,gBAAN,CAAuB;AACpCC,EAAAA,WAAW,GAAG;AACZ,SAAKC,QAAL,GAAgB,KAAKC,oBAAL,EAAhB;AACD;;AACDC,EAAAA,GAAG,CAACC,OAAD,EAAU;AACX,SAAKA,OAAL,CAAaC,IAAb,CAAkBD,OAAlB;AACA,SAAKE,kBAAL;AAEA,WAAO,KAAKL,QAAZ;AACD;;AAEDM,EAAAA,MAAM,CAACH,OAAD,EAAU;AACd,SAAKH,QAAL,CAAcO,MAAd,CAAqB,KAAKP,QAAL,CAAcQ,OAAd,CAAsBL,OAAtB,CAArB,EAAqD,CAArD;AACA,SAAKE,kBAAL;AAEA,WAAO,KAAKL,QAAZ;AACD;;AAEDS,EAAAA,kBAAkB,GAAG;AACnB,QAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX;AAEA,QAAIF,IAAI,KAAK,IAAb,EAAmB,OAAO,EAAP;AACnB,QAAIG,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiB,CAACM,GAAD,EAAMC,KAAN,KAAgB;AAChD,UAAID,GAAG,KAAK,UAAZ,EAAwB;AACtBC,QAAAA,KAAK,GAAG,IAAIpB,OAAJ,CAAYoB,KAAZ,CAAR;AACD;;AACD,aAAOA,KAAP;AACD,KALgB,CAAjB;AAOA,QAAIJ,UAAU,CAACK,MAAX,KAAsB,CAA1B,EAA6B,OAAO,EAAP;AAE7B,QAAIlB,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,UAAU,CAACO,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1CnB,MAAAA,QAAQ,CAACI,IAAT,CAAcP,OAAO,CAACwB,QAAR,CAAiBR,UAAU,CAACM,CAAD,CAA3B,CAAd;AACD;;AACD,WAAOtB,OAAP;AACD;;AArCmC","sourcesContent":["import Contact from \"./contact\";\n\nexport default class ContactFunctions {\n  constructor() {\n    this.contacts = this.loadFromLocalStorage();\n  }\n  add(contact) {\n    this.contact.push(contact);\n    this.saveToLocalStorage();\n\n    return this.contacts;\n  }\n\n  delete(contact) {\n    this.contacts.splice(this.contacts.indexOf(contact), 1);\n    this.saveToLocalStorage();\n\n    return this.contacts;\n  }\n\n  savetoLocalStorage() {\n    var json = localStorage.getItem(\"contacts\");\n\n    if (json === null) return [];\n    let jsonParsed = JSON.parse(json, (key, value) => {\n      if (key === \"contacts\") {\n        value = new Contact(value);\n      }\n      return value;\n    });\n\n    if (jsonParsed.lenght === 0) return [];\n\n    let contacts = [];\n\n    for (let i = 0; i < jsonParsed.length; i++) {\n      contacts.push(Contact.fromJSON(jsonParsed[i]));\n    }\n    return Contact;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}